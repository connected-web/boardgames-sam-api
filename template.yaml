AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: |
  boardgames-sam-api
  SAM Template for Boardgames SAM API
Globals:
  Function:
    Timeout: 3
  Api:
    Cors:
      AllowMethods: '''DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'''
      AllowHeaders: '''Content-Type,Calisaurus-User,Calisaurus-User-Api-Key'''
      AllowOrigin: '''*'''
Resources:
  BoardgamesApiTable:
    Properties:
      TableName: boardgames-api
      Tags:
        AppType: Serverless
  StatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api-code/
      Handler: app.default_status
      Runtime: nodejs14.x
      Policies: []
      Events:
        Summary:
          Type: Api
          Properties:
            Path: /status
            Method: GET
  CreatePlayRecordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api-code/
      Handler: app.playrecords_create
      Runtime: nodejs14.x
      Policies:
        - S3FullAccessPolicy:
            BucketName: boardgames-tracking
      Events:
        Summary:
          Type: Api
          Properties:
            Path: /playrecords/create
            Method: POST
  DeletePlayRecordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api-code/
      Handler: app.playrecords_delete
      Runtime: nodejs14.x
      Policies:
        - S3FullAccessPolicy:
            BucketName: boardgames-tracking
      Events:
        Summary:
          Type: Api
          Properties:
            Path: /playrecords/delete
            Method: DELETE
  ListPlayRecordsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api-code/
      Handler: app.playrecords_list
      Runtime: nodejs14.x
      Policies:
        - S3FullAccessPolicy:
            BucketName: boardgames-tracking
      Events:
        Summary:
          Type: Api
          Properties:
            Path: /playrecords/list
            Method: GET
  ListUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api-code/
      Handler: app.users_list
      Runtime: nodejs14.x
      Policies:
        - S3FullAccessPolicy:
            BucketName: boardgames-tracking
      Events:
        Summary:
          Type: Api
          Properties:
            Path: /users/list
            Method: GET
Outputs:
  BoardgamesSamApi:
    Description: API Gateway endpoint URL for Prod stage of Boardgames SAM API
    Value: !Sub >-
      https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/summary/
  StatusFunction:
    Description: Status Lambda Function ARN
    Value: !GetAtt StatusFunction.Arn
  StatusFunctionIamRole:
    Description: Implicit IAM Role created for Status function
    Value: !GetAtt StatusFunctionRole.Arn
  CreatePlayRecordFunction:
    Description: CreatePlayRecord Lambda Function ARN
    Value: !GetAtt CreatePlayRecordFunction.Arn
  CreatePlayRecordFunctionIamRole:
    Description: Implicit IAM Role created for CreatePlayRecord function
    Value: !GetAtt CreatePlayRecordFunctionRole.Arn
  DeletePlayRecordFunction:
    Description: DeletePlayRecord Lambda Function ARN
    Value: !GetAtt DeletePlayRecordFunction.Arn
  DeletePlayRecordFunctionIamRole:
    Description: Implicit IAM Role created for DeletePlayRecord function
    Value: !GetAtt DeletePlayRecordFunctionRole.Arn
  ListPlayRecordsFunction:
    Description: ListPlayRecords Lambda Function ARN
    Value: !GetAtt ListPlayRecordsFunction.Arn
  ListPlayRecordsFunctionIamRole:
    Description: Implicit IAM Role created for ListPlayRecords function
    Value: !GetAtt ListPlayRecordsFunctionRole.Arn
  ListUsersFunction:
    Description: ListUsers Lambda Function ARN
    Value: !GetAtt ListUsersFunction.Arn
  ListUsersFunctionIamRole:
    Description: Implicit IAM Role created for ListUsers function
    Value: !GetAtt ListUsersFunctionRole.Arn
